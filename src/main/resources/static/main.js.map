{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-router/app-router.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/application-list/application-list.component.css","webpack:///./src/app/component/application-list/application-list.component.html","webpack:///./src/app/component/application-list/application-list.component.ts","webpack:///./src/app/component/application/application.component.css","webpack:///./src/app/component/application/application.component.html","webpack:///./src/app/component/application/application.component.ts","webpack:///./src/app/component/messages/messages.component.css","webpack:///./src/app/component/messages/messages.component.html","webpack:///./src/app/component/messages/messages.component.ts","webpack:///./src/app/component/user-list/user-list.component.css","webpack:///./src/app/component/user-list/user-list.component.html","webpack:///./src/app/component/user-list/user-list.component.ts","webpack:///./src/app/component/user/user.component.css","webpack:///./src/app/component/user/user.component.html","webpack:///./src/app/component/user/user.component.ts","webpack:///./src/app/service/application.service.ts","webpack:///./src/app/service/messages.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {UserListComponent} from \"../component/user-list/user-list.component\";\nimport {ApplicationListComponent} from \"../component/application-list/application-list.component\";\nimport {UserComponent} from \"../component/user/user.component\";\nimport {ApplicationComponent} from \"../component/application/application.component\";\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/applist', pathMatch: 'full' },\n  { path: 'userlist', component: UserListComponent },\n  { path: 'applist', component: ApplicationListComponent },\n  { path: 'user/:id', component: UserComponent },\n  { path: 'user/new', component: UserComponent },\n  { path: 'application/:id', component: ApplicationComponent },\n  { path: 'application/new/:userId', component: ApplicationComponent }\n];\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [ RouterModule.forRoot(routes) ]\n})\nexport class AppRouterModule { }\n","module.exports = \"a {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\"","module.exports = \"<h1>{{ title }}</h1>\\n\\n<mat-divider></mat-divider>\\n\\n<br>\\n<nav>\\n  <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/userlist\\\">Users</a>\\n  <a mat-raised-button color=\\\"primary\\\" routerLink=\\\"/applist\\\">Applications</a>\\n</nav>\\n<br>\\n\\n<mat-divider></mat-divider>\\n\\n<app-messages></app-messages>\\n<router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Booking Tool';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './component/user-list/user-list.component';\nimport { UserComponent } from './component/user/user.component';\nimport { MessagesComponent } from './component/messages/messages.component';\nimport {AppRouterModule} from \"./app-router/app-router.module\";\nimport { ApplicationComponent } from './component/application/application.component';\nimport { ApplicationListComponent } from './component/application-list/application-list.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatCheckboxModule, MatPaginatorModule, MatTableModule} from \"@angular/material\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserComponent,\n    MessagesComponent,\n    ApplicationComponent,\n    ApplicationListComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRouterModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-select {\\r\\n  overflow: initial;\\r\\n}\\r\\n\"","module.exports = \"<h3>Applications</h3>\\n<div class=\\\"button-row\\\">\\n  <a mat-button\\n     routerLink=\\\"/application/{{selection.hasValue() ? selection.selected[0].id : null}}\\\"\\n     [disabled]=\\\"!selection.hasValue()\\\">\\n    Update application\\n  </a>\\n  <button mat-button color=\\\"warn\\\"\\n          (click)=\\\"deleteApp(selection.selected[0])\\\"\\n          [disabled]=\\\"!selection.hasValue()\\\">\\n    Delete application\\n  </button>\\n</div>\\n<br>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"appDataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                      (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                      [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let app\\\"> {{app.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let app\\\"> {{app.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef> Type </th>\\n      <td mat-cell *matCellDef=\\\"let app\\\"> {{app.type}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"contentTypes\\\">\\n      <th mat-header-cell *matHeaderCellDef> Content Types </th>\\n      <td mat-cell *matCellDef=\\\"let app\\\"> {{app.contentTypes}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"userId\\\">\\n      <th mat-header-cell *matHeaderCellDef> UserID </th>\\n      <td mat-cell *matCellDef=\\\"let app\\\"> {{app.userId}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                 [length]=\\\"totalLength\\\"\\n                 [pageSize]=\\\"pageSize\\\"\\n                 (page)=\\\"onPageChange($event)\\\" [showFirstLastButtons]=\\\"true\\\">\\n  </mat-paginator>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ApplicationService} from \"../../service/application.service\";\nimport {SelectionModel} from \"@angular/cdk/collections\";\nimport {MatTableDataSource, PageEvent} from \"@angular/material\";\nimport {Application} from \"../../model/application\";\n\n@Component({\n  selector: 'app-application-list',\n  templateUrl: './application-list.component.html',\n  styleUrls: ['./application-list.component.css']\n})\nexport class ApplicationListComponent implements OnInit {\n\n  totalLength = 0;\n  pageSize = 5;\n  pageIndex = 0;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  appDataSource = new MatTableDataSource<Application>();\n\n\n  selection = new SelectionModel<Application>(false, []);\n  displayedColumns = ['select', 'id', 'name', 'type', 'contentTypes', 'userId'];\n\n  constructor(private appService: ApplicationService) { }\n\n  ngOnInit() {\n    this.loadApps();\n  }\n\n  loadApps(): void {\n    this.appService.getApps(this.pageIndex, this.pageSize)\n      .subscribe(page => {\n        this.appDataSource.data = page.content;\n        this.pageSize = page.pageable.pageSize;\n        this.pageIndex = page.pageable.pageNumber;\n        this.totalLength = page.totalElements;\n      });\n  }\n\n  deleteApp(app: Application) {\n    this.appService.deleteApp(app)\n      .subscribe(() => {\n        this.selection.clear();\n        this.loadApps();\n      });\n  }\n\n  onPageChange(e: PageEvent) {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.loadApps();\n  }\n}\n","module.exports = \"button {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n  width: 30%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"app || isNew\\\">\\n\\n  <h3>{{isNew ? \\\"Create New Application\\\" : \\\"Application Details\\\"}}</h3>\\n\\n  <div class=\\\"form-container\\\">\\n    <mat-form-field *ngIf=\\\"!isNew\\\">\\n      <input matInput placeholder=\\\"App ID:\\\" [value]=\\\"app.id\\\" disabled>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Name:\\\" [(ngModel)]=\\\"app.name\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Type:\\\" [(ngModel)]=\\\"app.type\\\" [required]=\\\"true\\\">\\n        <mat-option *ngFor=\\\"let appTypeOpt of appTypes\\\" [value]=\\\"appTypeOpt.name\\\">\\n          {{appTypeOpt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Content Type:\\\" [(ngModel)]=\\\"app.contentTypes\\\" multiple>\\n        <mat-option *ngFor=\\\"let contentTypeOpt of contentTypes\\\" [value]=\\\"contentTypeOpt\\\">\\n          {{contentTypeOpt}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"User ID:\\\" [value]=\\\"app.userId\\\" disabled>\\n    </mat-form-field>\\n  </div>\\n  <div>\\n    <button mat-raised-button (click)=\\\"goBack()\\\">Go back</button>\\n\\n    <button mat-raised-button *ngIf=\\\"!isNew\\\" (click)=\\\"update()\\\" class=\\\"saveButton\\\" color=\\\"primary\\\">Save</button>\\n    <button mat-raised-button *ngIf=\\\"isNew\\\" (click)=\\\"create()\\\" class=\\\"saveButton\\\" color=\\\"primary\\\">Create app</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Location} from \"@angular/common\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Application} from \"../../model/application\";\nimport {ApplicationService} from \"../../service/application.service\";\nimport {MatOption} from \"@angular/material\";\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n  appTypes = [\n    {name: \"ANDROID\",  value: \"Android app\"},\n    {name: \"IOS\", value: \"iOS app\"},\n    {name: \"WEBSITE\", value: \"Website\"}\n  ];\n\n  contentTypes = [\n    \"IMAGE\",\n    \"VIDEO\",\n    \"HTML\"\n  ];\n\n  app: Application = {\n    id: 0,\n    name: \"\",\n    type: \"\",\n    contentTypes: [],\n    userId: 0\n  };\n  isNew: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private appService: ApplicationService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getApp();\n  }\n\n  getApp(): void {\n    if(this.route.snapshot.url[1].path === 'new') {\n      this.isNew = true;\n      this.app.userId = +this.route.snapshot.paramMap.get('userId');\n    }\n    else {\n      let id = this.route.snapshot.paramMap.get('id');\n      this.appService.getApp(+id)\n        .subscribe(app => this.app = app);\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  update(): void {\n    this.appService.updateApp(this.app)\n      .subscribe(() => this.goBack());\n  }\n\n  create(): void {\n    this.appService.createApp(this.app, this.app.userId)\n      .subscribe(() => this.goBack());\n  }\n\n}\n","module.exports = \"h2 {\\r\\n  color: red;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: crimson;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\nbutton.clear {\\r\\n  font-family: Arial;\\r\\n  background-color: #eee;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n  cursor: hand;\\r\\n}\\r\\nbutton:hover {\\r\\n  background-color: #cfd8dc;\\r\\n}\\r\\nbutton:disabled {\\r\\n  background-color: #eee;\\r\\n  color: #aaa;\\r\\n  cursor: auto;\\r\\n}\\r\\nbutton.clear {\\r\\n  color: #888;\\r\\n  margin-bottom: 12px;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {MessageService} from \"../../service/messages.service\";\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-column-select {\\r\\n  overflow: initial;\\r\\n}\\r\\n\"","module.exports = \"<h3>Users</h3>\\n\\n<div class=\\\"button-row\\\">\\n  <a mat-button routerLink=\\\"/user/new\\\">Create user</a>\\n  <a mat-button\\n     routerLink=\\\"/user/{{selection.hasValue() ? selection.selected[0].id : null}}\\\"\\n     [disabled]=\\\"!selection.hasValue()\\\">\\n    Update user\\n  </a>\\n  <button mat-button color=\\\"warn\\\"\\n          (click)=\\\"deleteUser(selection.selected[0])\\\"\\n          [disabled]=\\\"!selection.hasValue()\\\">\\n    Delete user\\n  </button>\\n</div>\\n<br>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"userDataSource\\\">\\n\\n    <ng-container matColumnDef=\\\"select\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\n        <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                      (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                      [checked]=\\\"selection.isSelected(row)\\\">\\n        </mat-checkbox>\\n      </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.id}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef> Email </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.email}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"role\\\">\\n      <th mat-header-cell *matHeaderCellDef> Role </th>\\n      <td mat-cell *matCellDef=\\\"let user\\\"> {{user.role}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                 [length]=\\\"totalLength\\\"\\n                 [pageSize]=\\\"pageSize\\\"\\n                 (page)=\\\"onPageChange($event)\\\" [showFirstLastButtons]=\\\"true\\\">\\n  </mat-paginator>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {User} from \"../../model/user\";\nimport {UserService} from \"../../service/user.service\";\nimport {MatTableDataSource, PageEvent} from \"@angular/material\";\nimport {SelectionModel} from \"@angular/cdk/collections\";\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  totalLength = 0;\n  pageSize = 5;\n  pageIndex = 0;\n  pageSizeOptions: number[] = [5, 10, 25, 100];\n\n  userDataSource = new MatTableDataSource<User>();\n\n\n  selection = new SelectionModel<User>(false, []);\n  displayedColumns = ['select', 'id', 'name', 'email', 'role'];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers(): void {\n    this.userService.getUsers(this.pageIndex, this.pageSize)\n      .subscribe(page => {\n        this.userDataSource.data = page.content;\n        this.pageSize = page.pageable.pageSize;\n        this.pageIndex = page.pageable.pageNumber;\n        this.totalLength = page.totalElements;\n      });\n  }\n\n  deleteUser(user: User) {\n    this.userService.deleteUser(user)\n      .subscribe(() => {\n        this.selection.clear();\n        this.loadUsers();\n      });\n  }\n\n  onPageChange(e: PageEvent) {\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n    this.loadUsers();\n  }\n}\n","module.exports = \"button {\\r\\n  margin-right: 5px;\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n  width: 30%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"user || isNew\\\">\\n\\n  <h3>{{isNew ? \\\"Create New User\\\" : \\\"User Details\\\"}}</h3>\\n\\n  <div class=\\\"form-container\\\">\\n    <mat-form-field *ngIf=\\\"!isNew\\\">\\n      <input matInput placeholder=\\\"UserID:\\\" [value]=\\\"user.id\\\" disabled>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Name:\\\" [(ngModel)]=\\\"user.name\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Email:\\\" [(ngModel)]=\\\"user.email\\\">\\n    </mat-form-field>\\n    <mat-form-field *ngIf=\\\"isNew\\\">\\n      <input matInput placeholder=\\\"Password:\\\" [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Role:\\\" [(ngModel)]=\\\"user.role\\\" [required]=\\\"true\\\">\\n        <mat-option *ngFor=\\\"let roleOpt of userRoles\\\" [value]=\\\"roleOpt.name\\\">\\n          {{roleOpt.value}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n  <div>\\n    <button mat-raised-button (click)=\\\"goBack()\\\">Go back</button>\\n    <button mat-raised-button *ngIf=\\\"!isNew\\\" (click)=\\\"update()\\\" color=\\\"primary\\\">Save</button>\\n    <a mat-raised-button *ngIf=\\\"!isNew\\\" routerLink=\\\"/application/new/{{user.id}}\\\" color=\\\"primary\\\">Create Application</a>\\n    <button mat-raised-button *ngIf=\\\"isNew\\\" (click)=\\\"create()\\\" color=\\\"primary\\\">Create user</button>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport {User} from '../../model/user';\nimport {UserService} from \"../../service/user.service\";\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  userRoles = [\n    {name: 'PUBLISHER', value: 'Publisher'},\n    {name: 'ADOPS', value: 'Operator'},\n    {name: 'ADMIN', value: 'Administrator'}\n  ];\n\n  user: User = {\n    id: 0,\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: this.userRoles[0].name\n  };\n\n  isNew: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  getUser(): void {\n    if(this.route.snapshot.url[1].path === 'new')\n      this.isNew = true;\n    else {\n      let id = this.route.snapshot.paramMap.get('id');\n      this.userService.getUser(+id)\n        .subscribe(user => this.user = user);\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  update(): void {\n    this.userService.updateUser(this.user)\n      .subscribe(() => this.goBack());\n  }\n\n  create(): void {\n    this.userService.createUser(this.user)\n      .subscribe(() => this.goBack());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {MessageService} from \"./messages.service\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {Page} from \"../model/page\";\nimport {Observable} from \"rxjs/index\";\nimport {catchError} from \"rxjs/operators\";\nimport {Application} from \"../model/application\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nexport const HOST: string = \"http://localhost:8080/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationService {\n\n  private appsEndpoint = HOST + 'api/apps';\n  private usersEndpoint = HOST + 'api/users';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  getApps(page = 0, size = 5): Observable<Page<Application>> {\n    return this.http.get<Page<Application>>(this.appsEndpoint,{\n      params: new HttpParams()\n        .set('page', page.toString())\n        .set('size', size.toString())\n    })\n      .pipe(\n        catchError(this.messageService.handleError<Page<Application>>('getApps'))\n      );\n  }\n\n  getApp(id: number): Observable<Application> {\n    const url = `${this.appsEndpoint}/${id}`;\n    return this.http.get<Application>(url)\n      .pipe(\n        catchError(this.messageService.handleError<Application>('getApplication'))\n      );\n  }\n\n  createApp(app: Application, userId: number): Observable<Application> {\n    let appTO = {\n      name: app.name,\n      type: app.type,\n      contentTypes: app.contentTypes\n    };\n\n    const url = `${this.usersEndpoint}/${userId}/apps`;\n    return this.http.post<Application>(url, appTO, httpOptions).pipe(\n      catchError(this.messageService.handleError<Application>('createApp'))\n    );\n  }\n\n  updateApp(app: Application): Observable<any> {\n    const url = `${this.usersEndpoint}/${app.userId}/apps/${app.id}`;\n    return this.http.put(url, app, httpOptions).pipe(\n      catchError(this.messageService.handleError<any>('updateApp'))\n    );\n  }\n\n  deleteApp(app: Application): Observable<any> {\n    const url = `${this.usersEndpoint}/${app.userId}/apps/${app.id}`;\n    return this.http.delete(url, httpOptions).pipe(\n      catchError(this.messageService.handleError<any>('deleteApp'))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from \"rxjs/index\";\nimport {of} from \"rxjs/internal/observable/of\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n\n  handleError<T> (operation = 'operation', result?: T) {\n    return (errorResponse: any): Observable<T> => {\n\n      console.error(errorResponse);\n\n      const error = errorResponse.error;\n      this.add(`Operation ${operation} failed.`);\n\n      if(error.message)\n        this.add(error.message);\n\n      if (typeof error.errors !== 'undefined' && error.errors.length > 0)\n        error.errors.forEach(\n          (elem) => this.add(`${elem.field} ${elem.defaultMessage}`)\n        );\n\n      return of(result as T);\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {User} from \"../model/user\";\nimport {Observable} from 'rxjs';\nimport {MessageService} from \"./messages.service\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {of} from \"rxjs/internal/observable/of\";\nimport {Page} from \"../model/page\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nexport const HOST: string = \"http://localhost:8080/\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private usersEndpoint = HOST + 'api/users';\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService\n  ) { }\n\n  getUsers(page = 0, size = 5): Observable<Page<User>> {\n    return this.http.get<Page<User>>(this.usersEndpoint,{\n        params: new HttpParams()\n          .set('page', page.toString())\n          .set('size', size.toString())\n      })\n      .pipe(\n        catchError(this.messageService.handleError<Page<User>>('getUsers'))\n      );\n  }\n\n  getUser(id: number): Observable<User> {\n    const url = `${this.usersEndpoint}/${id}`;\n    return this.http.get<User>(url)\n      .pipe(\n        catchError(this.messageService.handleError<User>('getUser'))\n      );\n  }\n\n  createUser(user: User): Observable<User> {\n    let userTO = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      role: user.role\n    };\n\n    return this.http.post<User>(this.usersEndpoint, userTO, httpOptions).pipe(\n      catchError(this.messageService.handleError<User>('createUser'))\n    );\n  }\n\n  updateUser(user: User): Observable<any> {\n    const url = `${this.usersEndpoint}/${user.id}`;\n    return this.http.put(url, user, httpOptions).pipe(\n      catchError(this.messageService.handleError<any>('updateUser'))\n    );\n  }\n\n  deleteUser(user: User | number): Observable<any> {\n    const id = typeof user === 'number' ? user : user.id;\n    const url = `${this.usersEndpoint}/${id}`;\n\n    return this.http.delete(url, httpOptions).pipe(\n      catchError(this.messageService.handleError<any>('deleteUser'))\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}